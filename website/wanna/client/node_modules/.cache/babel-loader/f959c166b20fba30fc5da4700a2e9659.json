{"remainingRequest":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\mdbvue\\src\\components\\Plugins\\Rating.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\mdbvue\\src\\components\\Plugins\\Rating.vue","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import classNames from \"classnames\";\nimport { mdbIcon } from \"../Content/Fa\";\nimport { mdbTooltip } from \"../Advanced/Tooltip\";\nimport { mdbPopover } from \"../Advanced/Popover\";\nimport { mdbTextarea } from \"../Forms/MdTextarea\";\nimport { mdbBtn } from \"../Components/Button\";\nvar Rating = {\n  components: {\n    mdbIcon: mdbIcon,\n    mdbTooltip: mdbTooltip,\n    mdbPopover: mdbPopover,\n    mdbTextarea: mdbTextarea,\n    mdbBtn: mdbBtn\n  },\n  props: {\n    tag: {\n      type: String,\n      default: \"div\"\n    },\n    feedback: {\n      type: Boolean,\n      default: false\n    },\n    icon: {\n      type: String,\n      default: \"star\"\n    },\n    iconClass: {\n      type: String,\n      default: \"grey-text\"\n    },\n    iconActiveClass: {\n      type: String,\n      default: \"yellow-text\"\n    },\n    value: Number,\n    far: Boolean,\n    fab: Boolean,\n    fal: Boolean,\n    fad: Boolean,\n    activeFar: Boolean,\n    activeFab: Boolean,\n    activeFal: Boolean,\n    activeFad: Boolean,\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    options: {\n      type: Array,\n      default: function _default() {\n        return [{\n          feedback: \"Very bad\"\n        }, {\n          feedback: \"Poor\"\n        }, {\n          feedback: \"OK\"\n        }, {\n          feedback: \"Good\"\n        }, {\n          feedback: \"Excellent\"\n        }];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      ratings: [],\n      active: -1,\n      rateValue: -1,\n      showModal: false,\n      closePopover: null,\n      feedbackMessage: \"\"\n    };\n  },\n  methods: {\n    updateRating: function updateRating(i) {\n      if (!this.disabled) this.active = i;\n    },\n    clearRating: function clearRating() {\n      if (!this.disabled) this.active = this.rateValue > -1 ? this.rateValue : -1;\n    },\n    rate: function rate(index) {\n      if (!this.disabled) {\n        this.$emit(\"input\", index + 1);\n        this.rateValue = index;\n      }\n    },\n    forceClosePopover: function forceClosePopover() {\n      var _this = this;\n\n      this.closePopover = true;\n      setTimeout(function () {\n        _this.closePopover = false;\n      });\n    },\n    submitFeedback: function submitFeedback() {\n      if (this.feedbackMessage !== \"\") {\n        this.$emit(\"submit\", this.feedbackMessage);\n        this.forceClosePopover();\n      }\n\n      this.feedbackMessage = \"\";\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.ratings = this.options.map(function (rating) {\n      var icon = rating.icon || _this2.icon;\n      var iconActiveClass = rating.iconActiveClass || _this2.iconActiveClass;\n      var far = rating.far || _this2.activeFar;\n      var fab = rating.fab || _this2.activeFab;\n      var fal = rating.fal || _this2.activeFal;\n      var fad = rating.fad || _this2.activeFad;\n      var feedback = rating.feedback || \"\";\n      return {\n        icon: icon,\n        iconActiveClass: iconActiveClass,\n        far: far,\n        fab: fab,\n        fal: fal,\n        fad: fad,\n        feedback: feedback\n      };\n    });\n\n    if (this.value) {\n      this.rateValue = this.value - 1;\n      this.active = this.value - 1;\n    }\n  },\n  watch: {\n    value: function value(val) {\n      this.rateValue = val - 1;\n      this.active = val - 1;\n    }\n  }\n};\nexport default Rating;\nexport { Rating as mdbRating };",{"version":3,"sources":["Rating.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <component :is=\"tag\" @mouseleave=\"clearRating\">\n    <mdb-popover\n      v-for=\"(rating, i) in ratings\"\n      :key=\"i\"\n      trigger=\"click\"\n      :options=\"{placement: 'top'}\"\n      :disabled=\"!feedback || disabled\"\n      :close=\"closePopover\"\n    >\n      <span slot=\"header\">{{rating.feedback}}</span>\n      <span slot=\"body\">\n        <mdb-textarea v-model=\"feedbackMessage\" :rows=\"1\" />\n        <mdb-btn size=\"sm\" color=\"primary\" @click=\"submitFeedback\">Submit!</mdb-btn>\n        <mdb-btn size=\"sm\" flat @click=\"forceClosePopover\">Close</mdb-btn>\n      </span>\n\n      <mdb-tooltip\n        slot=\"reference\"\n        trigger=\"hover\"\n        :options=\"{placement: 'top'}\"\n        :disabled=\"disabled\"\n      >\n        <span slot=\"tip\">{{rating.feedback}}</span>\n        <mdb-icon\n          slot=\"reference\"\n          :icon=\"(i <= active) || i <= rateValue ? ratings[active].icon : icon\"\n          :class=\"(i <= active) || i <= rateValue ? ratings[active].iconActiveClass : iconClass\"\n          class=\"p-1 rating-icon\"\n          :fal=\"(i <= active) || i <= rateValue ? ratings[active].fal : fal\"\n          :far=\"(i <= active) || i <= rateValue ? ratings[active].far : far\"\n          :fab=\"(i <= active) || i <= rateValue ? ratings[active].fab : fab\"\n          :fad=\"(i <= active) || i <= rateValue ? ratings[active].fad : fad\"\n          :ref=\"i\"\n          @mouseover.native=\"updateRating(i)\"\n          @click.native=\"rate(i)\"\n        ></mdb-icon>\n      </mdb-tooltip>\n      <!-- </span> -->\n    </mdb-popover>\n  </component>\n</template>\n\n<script>\n// import classNames from \"classnames\";\nimport { mdbIcon } from \"../Content/Fa\";\nimport { mdbTooltip } from \"../Advanced/Tooltip\";\nimport { mdbPopover } from \"../Advanced/Popover\";\nimport { mdbTextarea } from \"../Forms/MdTextarea\";\nimport { mdbBtn } from \"../Components/Button\";\n\nconst Rating = {\n  components: {\n    mdbIcon,\n    mdbTooltip,\n    mdbPopover,\n    mdbTextarea,\n    mdbBtn\n  },\n  props: {\n    tag: {\n      type: String,\n      default: \"div\"\n    },\n    feedback: {\n      type: Boolean,\n      default: false\n    },\n    icon: {\n      type: String,\n      default: \"star\"\n    },\n    iconClass: {\n      type: String,\n      default: \"grey-text\"\n    },\n    iconActiveClass: {\n      type: String,\n      default: \"yellow-text\"\n    },\n    value: Number,\n    far: Boolean,\n    fab: Boolean,\n    fal: Boolean,\n    fad: Boolean,\n    activeFar: Boolean,\n    activeFab: Boolean,\n    activeFal: Boolean,\n    activeFad: Boolean,\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    options: {\n      type: Array,\n      default: () => {\n        return [\n          {\n            feedback: \"Very bad\"\n          },\n          {\n            feedback: \"Poor\"\n          },\n          {\n            feedback: \"OK\"\n          },\n          {\n            feedback: \"Good\"\n          },\n          {\n            feedback: \"Excellent\"\n          }\n        ];\n      }\n    }\n  },\n  data() {\n    return {\n      ratings: [],\n      active: -1,\n      rateValue: -1,\n      showModal: false,\n      closePopover: null,\n      feedbackMessage: \"\"\n    };\n  },\n  methods: {\n    updateRating(i) {\n      if (!this.disabled) this.active = i;\n    },\n    clearRating() {\n      if (!this.disabled)\n        this.active = this.rateValue > -1 ? this.rateValue : -1;\n    },\n    rate(index) {\n      if (!this.disabled) {\n        this.$emit(\"input\", index + 1);\n        this.rateValue = index;\n      }\n    },\n    forceClosePopover() {\n      this.closePopover = true;\n      setTimeout(() => {\n        this.closePopover = false;\n      });\n    },\n    submitFeedback() {\n      if (this.feedbackMessage !== \"\") {\n        this.$emit(\"submit\", this.feedbackMessage);\n        this.forceClosePopover();\n      }\n      this.feedbackMessage = \"\";\n    }\n  },\n  mounted() {\n    this.ratings = this.options.map(rating => {\n      let icon = rating.icon || this.icon;\n      let iconActiveClass = rating.iconActiveClass || this.iconActiveClass;\n      let far = rating.far || this.activeFar;\n      let fab = rating.fab || this.activeFab;\n      let fal = rating.fal || this.activeFal;\n      let fad = rating.fad || this.activeFad;\n      let feedback = rating.feedback || \"\";\n      return { icon, iconActiveClass, far, fab, fal, fad, feedback };\n    });\n\n    if (this.value) {\n      this.rateValue = this.value - 1;\n      this.active = this.value - 1;\n    }\n  },\n  watch: {\n    value(val) {\n      this.rateValue = val - 1;\n      this.active = val - 1;\n    }\n  }\n};\n\nexport default Rating;\nexport { Rating as mdbRating };\n</script>\n\n<style scoped>\n.rating-icon {\n  transition: all 0.2s linear;\n  cursor: pointer;\n}\n</style>\n"],"sourceRoot":"node_modules/mdbvue/src/components/Plugins"}]}