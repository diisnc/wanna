{"remainingRequest":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\mdbvue\\src\\components\\Layout\\MasonryItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\mdbvue\\src\\components\\Layout\\MasonryItem.vue","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"C:\\\\Users\\\\Diana\\\\Documents\\\\GitHub\\\\levifashion\\\\website\\\\wanna\\\\client\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.string.small\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar MasonryItem = {\n  props: {\n    tag: {\n      type: String,\n      default: \"div\"\n    },\n    order: {\n      type: [String, Number],\n      default: \"\" || 0\n    },\n    itemStyle: {\n      type: Object\n    },\n    src: String\n  },\n  data: function data() {\n    return {\n      small: false,\n      medium: false,\n      show: true\n    };\n  },\n  computed: {\n    style: function style() {\n      var styles = this.small ? _objectSpread({}, this.itemStyle, {\n        \"width\": \"100%\"\n      }) : this.medium ? _objectSpread({}, this.itemStyle, {\n        \"width\": \"50%\"\n      }) : this.itemStyle;\n      return _objectSpread({\n        order: this.order\n      }, styles);\n    },\n    isResponsive: function isResponsive() {\n      return this.$parent.responsive;\n    }\n  },\n  methods: {\n    checkScreenSize: function checkScreenSize() {\n      if (window.innerWidth < 600) {\n        this.small = true;\n        this.medium = false;\n      } else if (window.innerWidth < 1200) {\n        this.medium = true;\n        this.small = false;\n      } else {\n        this.small = false;\n        this.medium = false;\n      }\n    }\n  },\n  mounted: function mounted() {\n    if (this.isResponsive) {\n      this.checkScreenSize();\n      window.addEventListener(\"resize\", this.checkScreenSize);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.isResponsive) {\n      window.removeEventListener(\"resize\", this.checkScreenSize);\n    }\n  },\n  watch: {\n    small: function small(val, oldValue) {\n      var _this = this;\n\n      if (val !== oldValue) {\n        this.show = false;\n        setTimeout(function () {\n          _this.show = true;\n        }, 300);\n      }\n    },\n    medium: function medium(val, oldValue) {\n      var _this2 = this;\n\n      if (val !== oldValue) {\n        this.show = false;\n        setTimeout(function () {\n          _this2.show = true;\n        }, 300);\n      }\n    }\n  }\n};\nexport default MasonryItem;\nexport { MasonryItem as mdbMasonryItem };",{"version":3,"sources":["MasonryItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAYA,IAAA,WAAA,GAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA,MAAA;AAFA,KALA;AASA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KATA;AAYA,IAAA,GAAA,EAAA;AAZA,GADA;AAeA,EAAA,IAfA,kBAeA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,KADA;AAEA,MAAA,MAAA,EAAA,KAFA;AAGA,MAAA,IAAA,EAAA;AAHA,KAAA;AAKA,GArBA;AAsBA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,UAAA,MAAA,GAAA,KAAA,KAAA,qBAAA,KAAA,SAAA;AAAA,iBAAA;AAAA,WAAA,KAAA,MAAA,qBAAA,KAAA,SAAA;AAAA,iBAAA;AAAA,WAAA,KAAA,SAAA;AACA;AACA,QAAA,KAAA,EAAA,KAAA;AADA,SAEA,MAFA;AAIA,KAPA;AAQA,IAAA,YARA,0BAQA;AACA,aAAA,KAAA,OAAA,CAAA,UAAA;AACA;AAVA,GAtBA;AAkCA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,6BACA;AACA,UAAA,MAAA,CAAA,UAAA,GAAA,GAAA,EAAA;AACA,aAAA,KAAA,GAAA,IAAA;AACA,aAAA,MAAA,GAAA,KAAA;AACA,OAHA,MAIA,IAAA,MAAA,CAAA,UAAA,GAAA,IAAA,EAAA;AACA,aAAA,MAAA,GAAA,IAAA;AACA,aAAA,KAAA,GAAA,KAAA;AACA,OAHA,MAIA;AACA,aAAA,KAAA,GAAA,KAAA;AACA,aAAA,MAAA,GAAA,KAAA;AACA;AACA;AAdA,GAlCA;AAkDA,EAAA,OAlDA,qBAkDA;AACA,QAAA,KAAA,YAAA,EAAA;AACA,WAAA,eAAA;AACA,MAAA,MAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,KAAA,eAAA;AACA;AACA,GAvDA;AAyDA,EAAA,aAzDA,2BAyDA;AACA,QAAA,KAAA,YAAA,EAAA;AACA,MAAA,MAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,eAAA;AACA;AACA,GA7DA;AA8DA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,GADA,EACA,QADA,EACA;AAAA;;AACA,UAAA,GAAA,KAAA,QAAA,EAAA;AACA,aAAA,IAAA,GAAA,KAAA;AACA,QAAA,UAAA,CAAA,YAAA;AAAA,UAAA,KAAA,CAAA,IAAA,GAAA,IAAA;AAAA,SAAA,EAAA,GAAA,CAAA;AACA;AACA,KANA;AAOA,IAAA,MAPA,kBAOA,GAPA,EAOA,QAPA,EAOA;AAAA;;AACA,UAAA,GAAA,KAAA,QAAA,EAAA;AACA,aAAA,IAAA,GAAA,KAAA;AACA,QAAA,UAAA,CAAA,YAAA;AAAA,UAAA,MAAA,CAAA,IAAA,GAAA,IAAA;AAAA,SAAA,EAAA,GAAA,CAAA;AACA;AACA;AAZA;AA9DA,CAAA;AA8EA,eAAA,WAAA;AACA,SAAA,WAAA,IAAA,cAAA","sourcesContent":["<template>\n  <transition\n    appear\n    name=\"slide\">\n    <component v-show=\"show\" :is=\"tag\" :style=\"style\">\n      <img class=\"masonry-image\" v-if=\"src\" :src=\"src\">\n      <slot v-else></slot>\n    </component>\n  </transition>\n</template>\n\n<script>\nconst MasonryItem = {\n  props: {\n    tag: {\n      type: String,\n      default: \"div\"\n    },\n    order: {\n      type: [String, Number],\n      default: \"\" || 0\n    },\n    itemStyle: {\n      type: Object\n    },\n    src: String\n  },\n  data() {\n    return {\n      small: false,\n      medium: false,\n      show: true\n    };\n  },\n  computed: {\n    style() {\n      const styles = this.small ? {...this.itemStyle, \"width\": \"100%\"} : this.medium ? {...this.itemStyle, \"width\" : \"50%\"} : this.itemStyle;\n      return {\n        order: this.order,\n        ...styles\n      };\n    },\n    isResponsive() {\n      return this.$parent.responsive;\n    }\n  },\n  methods: {\n    checkScreenSize() {\n      if (window.innerWidth < 600) {\n        this.small = true;\n        this.medium = false;\n      }\n      else if (window.innerWidth < 1200) {\n        this.medium = true;\n        this.small = false;\n      }\n      else {\n        this.small = false;\n        this.medium = false;\n      }\n    }\n  },\n  mounted() {\n    if (this.isResponsive) {\n      this.checkScreenSize();\n      window.addEventListener(\"resize\", this.checkScreenSize);\n    }\n  },\n \n  beforeDestroy() {\n    if (this.isResponsive) {\n      window.removeEventListener(\"resize\", this.checkScreenSize);\n    }\n  },\n  watch: {\n    small(val, oldValue) {\n      if (val !== oldValue) {\n        this.show = false;\n        setTimeout(() => {this.show = true;}, 300);\n      }\n    },\n    medium(val, oldValue) {\n      if (val !== oldValue) {\n        this.show = false;\n        setTimeout(() => {this.show = true;}, 300);\n      }\n    }\n  }\n};\n\nexport default MasonryItem;\nexport { MasonryItem as mdbMasonryItem };\n</script>\n\n<style scoped>\n.masonry-with-columns div {\n  -webkit-box-flex: 1;\n  -webkit-flex: 1 0 auto;\n  -ms-flex: 1 0 auto;\n  flex: 1 0 auto;\n}\n\n.masonry-image {\n  width: 100%;\n}\n\n.slide-enter-active {\n  transition: all 0.8s ease;\n}\n.slide-leave-active {\n  transition: all 0.8s ease;\n}\n\n.slide-enter {\n  transform: translateX(10px);\n  /* opacity: 0; */\n}\n</style>\n"],"sourceRoot":"node_modules/mdbvue/src/components/Layout"}]}