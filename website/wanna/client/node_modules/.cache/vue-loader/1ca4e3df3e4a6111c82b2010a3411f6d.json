{"remainingRequest":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\mdbvue\\src\\components\\Advanced\\Carousel.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\mdbvue\\src\\components\\Advanced\\Carousel.vue","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport classNames from 'classnames';\nimport CarouselNavigation from './CarouselNavigation';\nimport CarouselInner from './CarouselInner';\nimport CarouselIndicators from './CarouselIndicators';\nimport CarouselIndicator from './CarouselIndicator';\n\nconst Carousel ={\n  components: {\n    CarouselNavigation,\n    CarouselInner,\n    CarouselIndicators,\n    CarouselIndicator\n  },\n  props: {\n    tag: {\n      type: String,\n      default: \"div\"\n    },\n    interval: {\n      type: [Number, Boolean],\n      default: 10000\n    },\n    full: {\n      type: Boolean,\n      default: false\n    },\n    half: {\n      type: Boolean,\n      default: false\n    },\n    fade: {\n      type: Boolean,\n      default: false\n    },\n    multi: {\n      type: Boolean,\n      default: false\n    },\n    thumbnails: {\n      type: Boolean,\n      default: false\n    },\n    testimonial: {\n      type: Boolean,\n      default: false\n    },\n    showIndicators: {\n      type: Boolean\n    },\n    showControls: {\n      type: Boolean\n    },\n    slide: {\n      type: Boolean\n    },\n    leftIcon: {\n      type: String,\n      default: 'chevron-left'\n    },\n    rightIcon: {\n      type: String,\n      default: 'chevron-right'\n    },\n    floating: {\n      type: Boolean,\n      default: true\n    },\n    navClass: {\n      type: String\n    },\n    indicatorClass: {\n      type: String\n    },\n    indicatorStyle: {\n      type: [Object]\n    },\n    touch: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      page: 0,\n      items: [],\n      thumbnailsSrc: []\n    };\n  },\n  methods: {\n    slideEffect() {\n      let page = this.page;\n      this.items.forEach(function(item, index) {\n        let slideIndex = page - index;\n        if (slideIndex < 0) {\n          item.style.position = 'absolute';\n          item.style.left = '100%';\n        } else if (slideIndex > 0) {\n          item.style.position = 'absolute';\n          item.style.left = '-100%';\n        } else {\n          item.style.position = 'relative';\n          item.style.left = 0;\n        }\n      });\n    },\n    changeSlide(index) {\n      if (this.slide) {\n        this.page = index;\n        this.slideEffect();\n      } \n      else {\n        this.items[this.page].classList.remove('active');\n        this.page = index;\n        this.items[this.page].classList.add('active');\n      }\n     \n    },\n    slidePage(target) {\n      if (target === \"next\") {\n        if (this.page < this.itemsNumber) {\n          this.changeSlide(this.page + 1);\n        } else {\n          this.changeSlide(0);\n        }\n      } else if (target === \"prev\") {\n        if (this.page == 0) {\n          this.changeSlide(this.itemsNumber);\n        } else {\n          this.changeSlide(this.page - 1);\n        }\n      } else {\n        this.changeSlide(target);\n      }\n    },\n    autoSlide() {\n      if (this.interval) {\n        this.startSlide = setInterval(() => {\n          this.slidePage('next');\n        }, this.interval);\n      }\n    },\n    handleChangeSlide(showSlide) {\n      this.slidePage(showSlide.slideIndex);\n      clearInterval(this.startSlide);\n      this.autoSlide();\n    },\n    active(index) {\n      if (index == this.page) return true;\n    },\n    slideLeft() {\n      this.slidePage('next');\n    },\n    slideRight() {\n      this.slidePage('prev');\n    },\n  },\n  mounted() {\n    let items = [];\n    let thumbnails = [];\n    let itemsNumber = 0;\n    this.$slots.default.forEach(function(slot){\n      if (slot.elm.nodeType !== 3) {\n        items.push(slot.elm);\n        thumbnails.push(slot.componentInstance.src);\n        itemsNumber++;\n      }\n    });\n    this.items = items;\n    this.itemsNumber = itemsNumber - 1;\n    this.thumbnailsSrc = thumbnails;\n    if (this.slide) {\n      this.items.forEach(function(item, index) {\n        item.classList.add('active', 'carousel-slide-item');\n      });\n      this.slideEffect();\n    } else {\n      this.items[this.page].classList.add('active');\n    }\n    this.autoSlide();\n  },\n  computed: {\n    className() {\n      return classNames(\n        'carousel',\n        this.multi ? 'carousel-multi-item' : 'carousel-fade',\n        this.half && 'half',\n        this.full && 'full',\n        this.fade && 'carousel-fade',\n        this.thumbnails && 'carousel-thumbnails',\n        this.testimonial && 'testimonial-carousel'\n      );\n    }\n  }\n};\n\nexport default Carousel;\nexport { Carousel as mdbCarousel };\n",{"version":3,"sources":["Carousel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAofile":"Carousel.vue","sourceRoot":"node_modules/mdbvue/src/components/Advanced","sourcesContent":["<template>\n  <component :is=\"tag\" :class=\"className\">\n    <carousel-navigation v-if=\"showControls && multi\" :top=\"multi\" :testimonial=\"testimonial\" :leftIcon=\"leftIcon\" :rightIcon=\"rightIcon\" :floating=\"floating\" :navClass=\"navClass\" @changeSlide=\"handleChangeSlide\"></carousel-navigation>\n    <carousel-indicators v-if=\"showIndicators && !thumbnails\">\n      <carousel-indicator v-for=\"(item, index) in items\" :key=\"index\" :index=\"index\" :active=\"active(index)\" :indicatorClass=\"indicatorClass\" @changeSlide=\"handleChangeSlide\"/>\n    </carousel-indicators>\n    <carousel-inner v-if=\"touch\" v-touch:swipe.left=\"slideLeft\" v-touch:swipe.right=\"slideRight\">\n      <slot></slot>\n    </carousel-inner>\n    <carousel-inner v-else :active=\"page\">\n      <slot></slot>\n    </carousel-inner>\n    <carousel-indicators v-if=\"showIndicators && thumbnails\">\n      <carousel-indicator  v-for=\"(item, index) in items\" :key=\"index\" :index=\"index\" :active=\"active(index)\" :indicatorClass=\"indicatorClass\" @changeSlide=\"handleChangeSlide\" :src=\"thumbnailsSrc[index]\" :indicatorStyle=\"indicatorStyle\"/>\n    </carousel-indicators>\n    <carousel-navigation :testimonial=\"testimonial\" v-if=\"showControls && !multi\" @changeSlide=\"handleChangeSlide\"></carousel-navigation>\n  </component>\n</template>\n\n<script>\nimport classNames from 'classnames';\nimport CarouselNavigation from './CarouselNavigation';\nimport CarouselInner from './CarouselInner';\nimport CarouselIndicators from './CarouselIndicators';\nimport CarouselIndicator from './CarouselIndicator';\n\nconst Carousel ={\n  components: {\n    CarouselNavigation,\n    CarouselInner,\n    CarouselIndicators,\n    CarouselIndicator\n  },\n  props: {\n    tag: {\n      type: String,\n      default: \"div\"\n    },\n    interval: {\n      type: [Number, Boolean],\n      default: 10000\n    },\n    full: {\n      type: Boolean,\n      default: false\n    },\n    half: {\n      type: Boolean,\n      default: false\n    },\n    fade: {\n      type: Boolean,\n      default: false\n    },\n    multi: {\n      type: Boolean,\n      default: false\n    },\n    thumbnails: {\n      type: Boolean,\n      default: false\n    },\n    testimonial: {\n      type: Boolean,\n      default: false\n    },\n    showIndicators: {\n      type: Boolean\n    },\n    showControls: {\n      type: Boolean\n    },\n    slide: {\n      type: Boolean\n    },\n    leftIcon: {\n      type: String,\n      default: 'chevron-left'\n    },\n    rightIcon: {\n      type: String,\n      default: 'chevron-right'\n    },\n    floating: {\n      type: Boolean,\n      default: true\n    },\n    navClass: {\n      type: String\n    },\n    indicatorClass: {\n      type: String\n    },\n    indicatorStyle: {\n      type: [Object]\n    },\n    touch: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      page: 0,\n      items: [],\n      thumbnailsSrc: []\n    };\n  },\n  methods: {\n    slideEffect() {\n      let page = this.page;\n      this.items.forEach(function(item, index) {\n        let slideIndex = page - index;\n        if (slideIndex < 0) {\n          item.style.position = 'absolute';\n          item.style.left = '100%';\n        } else if (slideIndex > 0) {\n          item.style.position = 'absolute';\n          item.style.left = '-100%';\n        } else {\n          item.style.position = 'relative';\n          item.style.left = 0;\n        }\n      });\n    },\n    changeSlide(index) {\n      if (this.slide) {\n        this.page = index;\n        this.slideEffect();\n      } \n      else {\n        this.items[this.page].classList.remove('active');\n        this.page = index;\n        this.items[this.page].classList.add('active');\n      }\n     \n    },\n    slidePage(target) {\n      if (target === \"next\") {\n        if (this.page < this.itemsNumber) {\n          this.changeSlide(this.page + 1);\n        } else {\n          this.changeSlide(0);\n        }\n      } else if (target === \"prev\") {\n        if (this.page == 0) {\n          this.changeSlide(this.itemsNumber);\n        } else {\n          this.changeSlide(this.page - 1);\n        }\n      } else {\n        this.changeSlide(target);\n      }\n    },\n    autoSlide() {\n      if (this.interval) {\n        this.startSlide = setInterval(() => {\n          this.slidePage('next');\n        }, this.interval);\n      }\n    },\n    handleChangeSlide(showSlide) {\n      this.slidePage(showSlide.slideIndex);\n      clearInterval(this.startSlide);\n      this.autoSlide();\n    },\n    active(index) {\n      if (index == this.page) return true;\n    },\n    slideLeft() {\n      this.slidePage('next');\n    },\n    slideRight() {\n      this.slidePage('prev');\n    },\n  },\n  mounted() {\n    let items = [];\n    let thumbnails = [];\n    let itemsNumber = 0;\n    this.$slots.default.forEach(function(slot){\n      if (slot.elm.nodeType !== 3) {\n        items.push(slot.elm);\n        thumbnails.push(slot.componentInstance.src);\n        itemsNumber++;\n      }\n    });\n    this.items = items;\n    this.itemsNumber = itemsNumber - 1;\n    this.thumbnailsSrc = thumbnails;\n    if (this.slide) {\n      this.items.forEach(function(item, index) {\n        item.classList.add('active', 'carousel-slide-item');\n      });\n      this.slideEffect();\n    } else {\n      this.items[this.page].classList.add('active');\n    }\n    this.autoSlide();\n  },\n  computed: {\n    className() {\n      return classNames(\n        'carousel',\n        this.multi ? 'carousel-multi-item' : 'carousel-fade',\n        this.half && 'half',\n        this.full && 'full',\n        this.fade && 'carousel-fade',\n        this.thumbnails && 'carousel-thumbnails',\n        this.testimonial && 'testimonial-carousel'\n      );\n    }\n  }\n};\n\nexport default Carousel;\nexport { Carousel as mdbCarousel };\n</script>\n\n<style>\n.carousel-inner {\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n}\n\n.carousel-fade .carousel-item {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: block !important;\n  opacity: 0;\n  z-index: 0;\n  transition: transform 0ms ease-in-out, opacity 0.8s ease-out;\n}\n\n.carousel-fade .carousel-item.active {\n  position: relative;\n  z-index: 1;\n  opacity: 1;\n}\n\n.carousel-control-prev, .carousel-control-next, .carousel-item-prev, .carousel-item-next {\n  position: absolute;\n  z-index: 2;\n}\n\n.carousel-multi-item .carousel-slide-item {\n  transition: left 0.5s;\n  top: 0;\n}\n\n</style>\n\n<style scoped>\n.full, .full .carousel-item{\n  height: 100% !important;\n}\n\n.half {\n  height: 50%;\n}\n</style>\n"]}]}