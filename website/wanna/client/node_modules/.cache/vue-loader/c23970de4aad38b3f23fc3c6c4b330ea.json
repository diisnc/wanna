{"remainingRequest":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\mdbvue\\src\\components\\Modals\\Modal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\mdbvue\\src\\components\\Modals\\Modal.vue","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport classNames from 'classnames';\nimport { mixin as clickaway } from 'vue-clickaway';\n\nconst Modal = {\n  props: {\n    tag: {\n      type: String,\n      default: \"div\"\n    },\n    size: {\n      type: String\n    },\n    side: {\n      type: Boolean,\n      default: false\n    },\n    position: {\n      type: String\n    },\n    fullHeight: {\n      type: Boolean,\n      default: false\n    },\n    frame: {\n      type: Boolean,\n      default: false\n    },\n    removeBackdrop: {\n      type: Boolean,\n      default: false\n    },\n    centered: {\n      type: Boolean,\n      default: false\n    },\n    cascade: {\n      type: Boolean,\n      default: false\n    },\n    danger: {\n      type: Boolean,\n      default: false\n    },\n    info: {\n      type: Boolean,\n      default: false\n    },\n    success: {\n      type: Boolean,\n      default: false\n    },\n    warning: {\n      type: Boolean,\n      default: false\n    },\n    tabs: {\n      type: Boolean,\n      default: false\n    },\n    avatar: {\n      type: Boolean,\n      default: false\n    },\n    elegant: {\n      type: Boolean,\n      default: false\n    },\n    dark: {\n      type: Boolean,\n      default: false\n    },\n    bgSrc: {\n      type: String,\n      default:''\n    },\n    direction: {\n      type: String,\n      default:'top'\n    },\n    show: {\n      type: Boolean,\n      default: true\n    },\n    scrollable: {\n      type: Boolean,\n      default: false\n    }\n  },\n  beforeMount() {\n    if (this.direction === 'right') {\n      this.dialogTransform = 'translate(25%,0)';\n    } else if (this.direction === 'bottom') {\n      this.dialogTransform = 'translate(0,25%)';\n    } else if (this.direction === 'left') {\n      this.dialogTransform = 'translate(-25%,0)';\n    }\n  },\n  data() {\n    return {\n      dialogTransform: 'translate(0,-25%)'\n    };\n  },\n  methods: {\n    away() {\n      if (this.removeBackdrop) {\n        return;\n      }\n      this.$emit('close', this);\n    },\n    enter(el) {\n      el.style.opacity = 0;\n      el.childNodes[0].style.transform = this.dialogTransform;\n      this.$emit('show', this);\n    },\n    afterEnter(el) {\n      el.style.opacity = 1;\n      el.childNodes[0].style.transform = 'translate(0,0)';\n      setTimeout(() => {\n        this.$emit('shown', this);\n      }, 400);\n    },\n    beforeLeave(el) {\n      this.$parent.$emit('hide', this);\n      el.style.opacity = 0;\n      el.childNodes[0].style.transform = this.dialogTransform;\n    },\n    afterLeave() {\n      this.$parent.$emit('hidden', this);\n    }\n  },\n  computed: {\n    wrapperClass() {\n      return classNames(\n        'modal',\n        this.removeBackdrop && 'modal-without-backdrop'\n      );\n    },\n    dialogClass() {\n      return classNames(\n        'modal-dialog',\n        this.size && 'modal-' + this.size,\n        this.side && 'modal-side',\n        this.fullHeight && 'modal-full-height',\n        this.frame && 'modal-frame',\n        this.position ? 'modal-' + this.position : '',\n        this.centered && 'modal-dialog-centered',\n        (this.cascade || this.tabs) && 'cascading-modal',\n        this.danger && 'modal-notify modal-danger',\n        this.info && 'modal-notify modal-info',\n        this.success && 'modal-notify modal-success',\n        this.warning && 'modal-notify modal-warning',\n        this.avatar && 'modal-avatar cascading-modal',\n        this.dark && 'form-dark',\n        this.scrollable && 'modal-dialog-scrollable'\n      );\n    },\n    contentClass() {\n      return classNames(\n        'modal-content',\n        this.tabs && 'modal-c-tabs',\n        this.elegant && 'form-elegant',\n        this.dark && 'card card-image'\n      );\n    },\n    computedContentStyle() {\n      return this.bgSrc ? {'background-image': `url(\"${this.bgSrc}\")`} : false;\n    }\n  },\n  mixins: [clickaway]\n};\n\nexport default Modal;\nexport { Modal as mdbModal };\n",{"version":3,"sources":["Modal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Modal.vue","sourceRoot":"node_modules/mdbvue/src/components/Modals","sourcesContent":["<template>\n  <transition name=\"fade\"\n    @enter=\"enter\"\n    @after-enter=\"afterEnter\"\n    @before-leave=\"beforeLeave\"\n    @after-leave=\"afterLeave\" \n  >\n    <component :is=\"tag\" v-if=\"show\" :class=\"wrapperClass\" @click.self=\"away\">\n      <div :class=\"dialogClass\" role=\"document\" >\n        <div :class=\"contentClass\" :style=\"computedContentStyle\">\n          <slot></slot>\n        </div>\n      </div>\n    </component>\n  </transition>\n</template>\n\n<script>\nimport classNames from 'classnames';\nimport { mixin as clickaway } from 'vue-clickaway';\n\nconst Modal = {\n  props: {\n    tag: {\n      type: String,\n      default: \"div\"\n    },\n    size: {\n      type: String\n    },\n    side: {\n      type: Boolean,\n      default: false\n    },\n    position: {\n      type: String\n    },\n    fullHeight: {\n      type: Boolean,\n      default: false\n    },\n    frame: {\n      type: Boolean,\n      default: false\n    },\n    removeBackdrop: {\n      type: Boolean,\n      default: false\n    },\n    centered: {\n      type: Boolean,\n      default: false\n    },\n    cascade: {\n      type: Boolean,\n      default: false\n    },\n    danger: {\n      type: Boolean,\n      default: false\n    },\n    info: {\n      type: Boolean,\n      default: false\n    },\n    success: {\n      type: Boolean,\n      default: false\n    },\n    warning: {\n      type: Boolean,\n      default: false\n    },\n    tabs: {\n      type: Boolean,\n      default: false\n    },\n    avatar: {\n      type: Boolean,\n      default: false\n    },\n    elegant: {\n      type: Boolean,\n      default: false\n    },\n    dark: {\n      type: Boolean,\n      default: false\n    },\n    bgSrc: {\n      type: String,\n      default:''\n    },\n    direction: {\n      type: String,\n      default:'top'\n    },\n    show: {\n      type: Boolean,\n      default: true\n    },\n    scrollable: {\n      type: Boolean,\n      default: false\n    }\n  },\n  beforeMount() {\n    if (this.direction === 'right') {\n      this.dialogTransform = 'translate(25%,0)';\n    } else if (this.direction === 'bottom') {\n      this.dialogTransform = 'translate(0,25%)';\n    } else if (this.direction === 'left') {\n      this.dialogTransform = 'translate(-25%,0)';\n    }\n  },\n  data() {\n    return {\n      dialogTransform: 'translate(0,-25%)'\n    };\n  },\n  methods: {\n    away() {\n      if (this.removeBackdrop) {\n        return;\n      }\n      this.$emit('close', this);\n    },\n    enter(el) {\n      el.style.opacity = 0;\n      el.childNodes[0].style.transform = this.dialogTransform;\n      this.$emit('show', this);\n    },\n    afterEnter(el) {\n      el.style.opacity = 1;\n      el.childNodes[0].style.transform = 'translate(0,0)';\n      setTimeout(() => {\n        this.$emit('shown', this);\n      }, 400);\n    },\n    beforeLeave(el) {\n      this.$parent.$emit('hide', this);\n      el.style.opacity = 0;\n      el.childNodes[0].style.transform = this.dialogTransform;\n    },\n    afterLeave() {\n      this.$parent.$emit('hidden', this);\n    }\n  },\n  computed: {\n    wrapperClass() {\n      return classNames(\n        'modal',\n        this.removeBackdrop && 'modal-without-backdrop'\n      );\n    },\n    dialogClass() {\n      return classNames(\n        'modal-dialog',\n        this.size && 'modal-' + this.size,\n        this.side && 'modal-side',\n        this.fullHeight && 'modal-full-height',\n        this.frame && 'modal-frame',\n        this.position ? 'modal-' + this.position : '',\n        this.centered && 'modal-dialog-centered',\n        (this.cascade || this.tabs) && 'cascading-modal',\n        this.danger && 'modal-notify modal-danger',\n        this.info && 'modal-notify modal-info',\n        this.success && 'modal-notify modal-success',\n        this.warning && 'modal-notify modal-warning',\n        this.avatar && 'modal-avatar cascading-modal',\n        this.dark && 'form-dark',\n        this.scrollable && 'modal-dialog-scrollable'\n      );\n    },\n    contentClass() {\n      return classNames(\n        'modal-content',\n        this.tabs && 'modal-c-tabs',\n        this.elegant && 'form-elegant',\n        this.dark && 'card card-image'\n      );\n    },\n    computedContentStyle() {\n      return this.bgSrc ? {'background-image': `url(\"${this.bgSrc}\")`} : false;\n    }\n  },\n  mixins: [clickaway]\n};\n\nexport default Modal;\nexport { Modal as mdbModal };\n</script>\n\n<style scoped>\n.modal {\n  display: block;\n  background-color: rgba(0,0,0,0.5);\n  transition: .3s;\n  overflow-y: auto;\n}\n\n.modal-dialog {\n  transition: .3s;\n}\n\n.modal-without-backdrop {\n  background: none;\n  pointer-events: none;\n}\n</style>\n"]}]}