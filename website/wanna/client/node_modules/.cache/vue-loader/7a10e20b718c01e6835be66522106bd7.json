{"remainingRequest":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\mdbvue\\src\\components\\Plugins\\Rating.vue?vue&type=style&index=0&id=7bbf3b4d&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\mdbvue\\src\\components\\Plugins\\Rating.vue","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.rating-icon {\n  transition: all 0.2s linear;\n  cursor: pointer;\n}\n",{"version":3,"sources":["Rating.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwLA;AACA;AACA;AACA","file":"Rating.vue","sourceRoot":"node_modules/mdbvue/src/components/Plugins","sourcesContent":["<template>\n  <component :is=\"tag\" @mouseleave=\"clearRating\">\n    <mdb-popover\n      v-for=\"(rating, i) in ratings\"\n      :key=\"i\"\n      trigger=\"click\"\n      :options=\"{placement: 'top'}\"\n      :disabled=\"!feedback || disabled\"\n      :close=\"closePopover\"\n    >\n      <span slot=\"header\">{{rating.feedback}}</span>\n      <span slot=\"body\">\n        <mdb-textarea v-model=\"feedbackMessage\" :rows=\"1\" />\n        <mdb-btn size=\"sm\" color=\"primary\" @click=\"submitFeedback\">Submit!</mdb-btn>\n        <mdb-btn size=\"sm\" flat @click=\"forceClosePopover\">Close</mdb-btn>\n      </span>\n\n      <mdb-tooltip\n        slot=\"reference\"\n        trigger=\"hover\"\n        :options=\"{placement: 'top'}\"\n        :disabled=\"disabled\"\n      >\n        <span slot=\"tip\">{{rating.feedback}}</span>\n        <mdb-icon\n          slot=\"reference\"\n          :icon=\"(i <= active) || i <= rateValue ? ratings[active].icon : icon\"\n          :class=\"(i <= active) || i <= rateValue ? ratings[active].iconActiveClass : iconClass\"\n          class=\"p-1 rating-icon\"\n          :fal=\"(i <= active) || i <= rateValue ? ratings[active].fal : fal\"\n          :far=\"(i <= active) || i <= rateValue ? ratings[active].far : far\"\n          :fab=\"(i <= active) || i <= rateValue ? ratings[active].fab : fab\"\n          :fad=\"(i <= active) || i <= rateValue ? ratings[active].fad : fad\"\n          :ref=\"i\"\n          @mouseover.native=\"updateRating(i)\"\n          @click.native=\"rate(i)\"\n        ></mdb-icon>\n      </mdb-tooltip>\n      <!-- </span> -->\n    </mdb-popover>\n  </component>\n</template>\n\n<script>\n// import classNames from \"classnames\";\nimport { mdbIcon } from \"../Content/Fa\";\nimport { mdbTooltip } from \"../Advanced/Tooltip\";\nimport { mdbPopover } from \"../Advanced/Popover\";\nimport { mdbTextarea } from \"../Forms/MdTextarea\";\nimport { mdbBtn } from \"../Components/Button\";\n\nconst Rating = {\n  components: {\n    mdbIcon,\n    mdbTooltip,\n    mdbPopover,\n    mdbTextarea,\n    mdbBtn\n  },\n  props: {\n    tag: {\n      type: String,\n      default: \"div\"\n    },\n    feedback: {\n      type: Boolean,\n      default: false\n    },\n    icon: {\n      type: String,\n      default: \"star\"\n    },\n    iconClass: {\n      type: String,\n      default: \"grey-text\"\n    },\n    iconActiveClass: {\n      type: String,\n      default: \"yellow-text\"\n    },\n    value: Number,\n    far: Boolean,\n    fab: Boolean,\n    fal: Boolean,\n    fad: Boolean,\n    activeFar: Boolean,\n    activeFab: Boolean,\n    activeFal: Boolean,\n    activeFad: Boolean,\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    options: {\n      type: Array,\n      default: () => {\n        return [\n          {\n            feedback: \"Very bad\"\n          },\n          {\n            feedback: \"Poor\"\n          },\n          {\n            feedback: \"OK\"\n          },\n          {\n            feedback: \"Good\"\n          },\n          {\n            feedback: \"Excellent\"\n          }\n        ];\n      }\n    }\n  },\n  data() {\n    return {\n      ratings: [],\n      active: -1,\n      rateValue: -1,\n      showModal: false,\n      closePopover: null,\n      feedbackMessage: \"\"\n    };\n  },\n  methods: {\n    updateRating(i) {\n      if (!this.disabled) this.active = i;\n    },\n    clearRating() {\n      if (!this.disabled)\n        this.active = this.rateValue > -1 ? this.rateValue : -1;\n    },\n    rate(index) {\n      if (!this.disabled) {\n        this.$emit(\"input\", index + 1);\n        this.rateValue = index;\n      }\n    },\n    forceClosePopover() {\n      this.closePopover = true;\n      setTimeout(() => {\n        this.closePopover = false;\n      });\n    },\n    submitFeedback() {\n      if (this.feedbackMessage !== \"\") {\n        this.$emit(\"submit\", this.feedbackMessage);\n        this.forceClosePopover();\n      }\n      this.feedbackMessage = \"\";\n    }\n  },\n  mounted() {\n    this.ratings = this.options.map(rating => {\n      let icon = rating.icon || this.icon;\n      let iconActiveClass = rating.iconActiveClass || this.iconActiveClass;\n      let far = rating.far || this.activeFar;\n      let fab = rating.fab || this.activeFab;\n      let fal = rating.fal || this.activeFal;\n      let fad = rating.fad || this.activeFad;\n      let feedback = rating.feedback || \"\";\n      return { icon, iconActiveClass, far, fab, fal, fad, feedback };\n    });\n\n    if (this.value) {\n      this.rateValue = this.value - 1;\n      this.active = this.value - 1;\n    }\n  },\n  watch: {\n    value(val) {\n      this.rateValue = val - 1;\n      this.active = val - 1;\n    }\n  }\n};\n\nexport default Rating;\nexport { Rating as mdbRating };\n</script>\n\n<style scoped>\n.rating-icon {\n  transition: all 0.2s linear;\n  cursor: pointer;\n}\n</style>\n"]}]}