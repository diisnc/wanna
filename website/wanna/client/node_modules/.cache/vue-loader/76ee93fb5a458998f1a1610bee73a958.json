{"remainingRequest":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\mdbvue\\src\\components\\Layout\\MasonryItem.vue?vue&type=style&index=0&id=583853b4&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\mdbvue\\src\\components\\Layout\\MasonryItem.vue","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.masonry-with-columns div {\n  -webkit-box-flex: 1;\n  -webkit-flex: 1 0 auto;\n  -ms-flex: 1 0 auto;\n  flex: 1 0 auto;\n}\n\n.masonry-image {\n  width: 100%;\n}\n\n.slide-enter-active {\n  transition: all 0.8s ease;\n}\n.slide-leave-active {\n  transition: all 0.8s ease;\n}\n\n.slide-enter {\n  transform: translateX(10px);\n  /* opacity: 0; */\n}\n",{"version":3,"sources":["MasonryItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"MasonryItem.vue","sourceRoot":"node_modules/mdbvue/src/components/Layout","sourcesContent":["<template>\n  <transition\n    appear\n    name=\"slide\">\n    <component v-show=\"show\" :is=\"tag\" :style=\"style\">\n      <img class=\"masonry-image\" v-if=\"src\" :src=\"src\">\n      <slot v-else></slot>\n    </component>\n  </transition>\n</template>\n\n<script>\nconst MasonryItem = {\n  props: {\n    tag: {\n      type: String,\n      default: \"div\"\n    },\n    order: {\n      type: [String, Number],\n      default: \"\" || 0\n    },\n    itemStyle: {\n      type: Object\n    },\n    src: String\n  },\n  data() {\n    return {\n      small: false,\n      medium: false,\n      show: true\n    };\n  },\n  computed: {\n    style() {\n      const styles = this.small ? {...this.itemStyle, \"width\": \"100%\"} : this.medium ? {...this.itemStyle, \"width\" : \"50%\"} : this.itemStyle;\n      return {\n        order: this.order,\n        ...styles\n      };\n    },\n    isResponsive() {\n      return this.$parent.responsive;\n    }\n  },\n  methods: {\n    checkScreenSize() {\n      if (window.innerWidth < 600) {\n        this.small = true;\n        this.medium = false;\n      }\n      else if (window.innerWidth < 1200) {\n        this.medium = true;\n        this.small = false;\n      }\n      else {\n        this.small = false;\n        this.medium = false;\n      }\n    }\n  },\n  mounted() {\n    if (this.isResponsive) {\n      this.checkScreenSize();\n      window.addEventListener(\"resize\", this.checkScreenSize);\n    }\n  },\n \n  beforeDestroy() {\n    if (this.isResponsive) {\n      window.removeEventListener(\"resize\", this.checkScreenSize);\n    }\n  },\n  watch: {\n    small(val, oldValue) {\n      if (val !== oldValue) {\n        this.show = false;\n        setTimeout(() => {this.show = true;}, 300);\n      }\n    },\n    medium(val, oldValue) {\n      if (val !== oldValue) {\n        this.show = false;\n        setTimeout(() => {this.show = true;}, 300);\n      }\n    }\n  }\n};\n\nexport default MasonryItem;\nexport { MasonryItem as mdbMasonryItem };\n</script>\n\n<style scoped>\n.masonry-with-columns div {\n  -webkit-box-flex: 1;\n  -webkit-flex: 1 0 auto;\n  -ms-flex: 1 0 auto;\n  flex: 1 0 auto;\n}\n\n.masonry-image {\n  width: 100%;\n}\n\n.slide-enter-active {\n  transition: all 0.8s ease;\n}\n.slide-leave-active {\n  transition: all 0.8s ease;\n}\n\n.slide-enter {\n  transform: translateX(10px);\n  /* opacity: 0; */\n}\n</style>\n"]}]}