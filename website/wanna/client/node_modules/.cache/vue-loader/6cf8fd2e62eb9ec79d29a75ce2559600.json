{"remainingRequest":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\mdbvue\\src\\components\\Advanced\\GoogleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\mdbvue\\src\\components\\Advanced\\GoogleMap.vue","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Diana\\Documents\\GitHub\\levifashion\\website\\wanna\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n\nconst GoogleMap = {\n  name: 'google-map',\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    },\n    markerCoordinates: {\n      type: Array\n    },\n    zoom: {\n      type: Number,\n      default: 14\n    },\n    modal: {\n      type: Boolean\n    },\n    styles: {\n      type: Array\n    },\n    type: {\n      type: String,\n      default: 'roadmap'\n    },\n    wrapperStyle: {\n      type: [Array, String, Object],\n    },\n    wrapperClass: {\n      type: [Array, String, Object],\n    },\n    manualInit: {\n      type: Boolean\n    }\n  },\n  data() {\n    return {\n      mapName: this.name + \"-map\",\n      map: null,\n      bounds: null,\n      markers: []\n    };\n  },\n  mounted() {\n    if (this.manualInit) return;\n    this.initMap();\n  },\n  methods: {\n    retrigger() {\n      google.maps.event.trigger(this.map, 'resize');\n    },\n    initMap() {\n      this.bounds = new google.maps.LatLngBounds();\n      const mapCentre = this.markerCoordinates[0];\n\n      const element = document.getElementById(this.mapName);\n      const options = {\n        center: new google.maps.LatLng(mapCentre.latitude, mapCentre.longitude),\n        zoom: this.zoom ? this.zoom: 15,\n        styles: this.styles,\n        mapTypeId: this.type\n      };\n      this.map = new google.maps.Map(element, options);\n      this.markerCoordinates.forEach(coord => {\n        const position = new google.maps.LatLng(coord.latitude, coord.longitude);\n        const marker = new google.maps.Marker({\n          position,\n          map: this.map,\n          title: coord.title\n        });\n        this.markers.push(marker);\n        if (this.zoom) {return;}\n        this.map.fitBounds(this.bounds.extend(position));\n      });\n    }\n  },\n  watch: {\n    modal() {\n      this.retrigger();\n    }\n  }\n};\n\nexport default GoogleMap;\nexport { GoogleMap as mdbGoogleMap };\n",{"version":3,"sources":["GoogleMap.vue"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"GoogleMap.vue","sourceRoot":"node_modules/mdbvue/src/components/Advanced","sourcesContent":["<template>\n  <div class=\"google-map\" :style=\"wrapperStyle\" :class=\"wrapperClass\" :id=\"mapName\"></div>\n</template>\n<script>\nconst GoogleMap = {\n  name: 'google-map',\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    },\n    markerCoordinates: {\n      type: Array\n    },\n    zoom: {\n      type: Number,\n      default: 14\n    },\n    modal: {\n      type: Boolean\n    },\n    styles: {\n      type: Array\n    },\n    type: {\n      type: String,\n      default: 'roadmap'\n    },\n    wrapperStyle: {\n      type: [Array, String, Object],\n    },\n    wrapperClass: {\n      type: [Array, String, Object],\n    },\n    manualInit: {\n      type: Boolean\n    }\n  },\n  data() {\n    return {\n      mapName: this.name + \"-map\",\n      map: null,\n      bounds: null,\n      markers: []\n    };\n  },\n  mounted() {\n    if (this.manualInit) return;\n    this.initMap();\n  },\n  methods: {\n    retrigger() {\n      google.maps.event.trigger(this.map, 'resize');\n    },\n    initMap() {\n      this.bounds = new google.maps.LatLngBounds();\n      const mapCentre = this.markerCoordinates[0];\n\n      const element = document.getElementById(this.mapName);\n      const options = {\n        center: new google.maps.LatLng(mapCentre.latitude, mapCentre.longitude),\n        zoom: this.zoom ? this.zoom: 15,\n        styles: this.styles,\n        mapTypeId: this.type\n      };\n      this.map = new google.maps.Map(element, options);\n      this.markerCoordinates.forEach(coord => {\n        const position = new google.maps.LatLng(coord.latitude, coord.longitude);\n        const marker = new google.maps.Marker({\n          position,\n          map: this.map,\n          title: coord.title\n        });\n        this.markers.push(marker);\n        if (this.zoom) {return;}\n        this.map.fitBounds(this.bounds.extend(position));\n      });\n    }\n  },\n  watch: {\n    modal() {\n      this.retrigger();\n    }\n  }\n};\n\nexport default GoogleMap;\nexport { GoogleMap as mdbGoogleMap };\n</script>\n<style scoped>\n.google-map {\n  width: 800px;\n  height: 600px;\n  /* margin: 0 auto;\n  background: gray; */\n}\n</style>\n"]}]}